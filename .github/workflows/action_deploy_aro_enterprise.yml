name: ARO enterprise architecture
on: [workflow_dispatch]
env:
  LOCATION: australiaeast
  ACR_USERNAME: 00000000-0000-0000-0000-000000000000
  CONTAINER_BUILD_NAME: aro_config:1

jobs: 
  hub_networking:
    runs-on: ubuntu-latest
    outputs:
      hubVnetName: ${{ steps.hub.outputs.hubVnetName }}
      aciSubnetName: ${{ steps.hub.outputs.aciSubnetName }}
    steps:
    - name: checkout code
      uses: actions/checkout@v3

    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: hub networking
      uses: azure/arm-deploy@v1
      id: hub
      with:
        scope: resourcegroup
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.HUB_RG }}
        template: ./modules/hub_network.bicep
        parameters: >
          ./action_params/hub_network.parameters.json
          location="${{ env.LOCATION }}"
        deploymentName: hub-networking-github-actions

  deploy_firewall:
    needs: hub_networking
    runs-on: ubuntu-latest
    outputs:
      fwPrivateIP: ${{ steps.firewall.outputs.fwPrivateIP }}
    steps:
    - name: checkout code
      uses: actions/checkout@v3

    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: deploy_firewall
      uses: azure/arm-deploy@v1
      id: firewall
      with:
        scope: resourcegroup
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.HUB_RG }}
        template: ./modules/firewall.bicep
        parameters: >
          ./action_params/firewall.parameters.json
          location="${{ env.LOCATION }}"
          hubVnetName="${{ needs.hub_networking.outputs.hubVnetName }}"
        deploymentName: firewall-github-actions

  user_defined_routing:
    needs: deploy_firewall
    runs-on: ubuntu-latest
    outputs:
      routeTableName: ${{ steps.route_table.outputs.routeTableName }}
    steps:
    - name: checkout code
      uses: actions/checkout@v3

    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: create_route
      uses: azure/arm-deploy@v1
      id: route_table
      with:
        scope: resourcegroup
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.SPOKE_RG }}
        template: ./modules/routing_table.bicep
        parameters: >
          ./action_params/routing.parameters.json
          location="${{ env.LOCATION }}"
          fwPrivateIP="${{ needs.deploy_firewall.outputs.fwPrivateIP }}"
        deploymentName: udr-github-actions
    
  spoke_networking:
    needs: user_defined_routing
    runs-on: ubuntu-latest
    outputs:
      spokeVnetName: ${{ steps.spoke.outputs.spokeVnetName }}
    steps:
    - name: checkout code
      uses: actions/checkout@v3

    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: spoke networking
      uses: azure/arm-deploy@v1
      id: spoke
      with:
        scope: resourcegroup
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.SPOKE_RG }}
        template: ./modules/spoke_network.bicep
        parameters: >
          ./action_params/spoke_networking.parameters.json
          spoke_rg="${{ secrets.SPOKE_RG }}"
          location="${{ env.LOCATION }}"
          routeTableName="${{ needs.user_defined_routing.outputs.routeTableName }}"
        deploymentName: spoke-networking-github-actions

  setup_peering:
    needs: [hub_networking, spoke_networking]
    runs-on: ubuntu-latest
    steps:
    - name: checkout code
      uses: actions/checkout@v3

    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: hub_peering
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.HUB_RG }}
        template: ./modules/peering.bicep
        parameters: >
          localVnetName="${{ needs.hub_networking.outputs.hubVnetName }}"
          remoteVnetName="${{ needs.spoke_networking.outputs.spokeVnetName }}"
          rgToPeer="${{ secrets.SPOKE_RG }}"
        deploymentName: hub-peering-github-actions

    - name: spoke_peering
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.SPOKE_RG }}
        template: ./modules/peering.bicep
        parameters: >
          localVnetName="${{ needs.spoke_networking.outputs.spokeVnetName }}" 
          remoteVnetName="${{ needs.hub_networking.outputs.hubVnetName }}" 
          rgToPeer="${{ secrets.HUB_RG }}"
        deploymentName: spoke-peering-github-actions

  deploy_aro: 
    needs: spoke_networking
    runs-on: ubuntu-latest
    outputs:
      clusterName: ${{ steps.aro.outputs.clusterName }}
    steps:
    - name: checkout code
      uses: actions/checkout@v3

    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
      
    - name: aro_cluster
      uses: azure/arm-deploy@v1
      id: aro
      with:
        scope: resourcegroup
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.SPOKE_RG }}
        template: ./modules/aro_cluster.bicep
        parameters: >
          ./action_params/aro.parameters.json 
          pullSecret="${{ secrets.PULL_SECRET }}"
          location="${{ env.LOCATION }}"
          aadClientId="${{ secrets.AAD_CLIENT_ID }}"
          aadClientSecret="${{ secrets.AAD_CLIENT_SECRET }}"
          aadObjectId="${{ secrets.AAD_OBJECT_ID }}"
          rpObjectId="${{ secrets.ARO_RP_OB_ID }}"
          spokeVnetName="${{ needs.spoke_networking.outputs.spokeVnetName }}"
          addSpRoleAssignment='no'
        deploymentName: aro-github-actions

  deploy_bastion:
    needs: hub_networking
    runs-on: ubuntu-latest
    steps:
    - name: checkout code
      uses: actions/checkout@v3

    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: deploy_bastion
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.HUB_RG }}
        template: ./modules/bastion.bicep
        parameters: >
          ./action_params/bastion.parameters.json
          location="${{ env.LOCATION }}"
          hubVnetName="${{ needs.hub_networking.outputs.hubVnetName }}"
        deploymentName: bastion-github-actions

  deploy_jumpbox:
    needs: [hub_networking, deploy_aro]
    runs-on: ubuntu-latest
    steps:
    - name: checkout code
      uses: actions/checkout@v3

    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: deploy_jumpbox
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.HUB_RG }}
        template: ./modules/jumpbox.bicep
        parameters: > 
          ./action_params/jumpbox.parameters.json
          location="${{ env.LOCATION }}"
          spoke_rg="${{ secrets.SPOKE_RG }}"
          clusterName="${{ needs.deploy_aro.outputs.clusterName}}"
          hubVnetName="${{ needs.hub_networking.outputs.hubVnetName }}"
          adminUsername="${{ secrets.JUMPBOX_ADMIN_USER }}" 
          adminPassword="${{ secrets.JUMPBOX_ADMIN_PWD }}"
        deploymentName: jumpbox-github-actions